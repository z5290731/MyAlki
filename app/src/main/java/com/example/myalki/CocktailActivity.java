package com.example.myalki;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.SearchView;
import android.widget.Toast;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class CocktailActivity extends AppCompatActivity {

    CocktailAdapter adapter;
    RecyclerView trainRV;

    Interface recyclerViewInterface;

    SearchView searchView;

    RecyclerView.LayoutManager layoutManager;

    List<CocktailDM> trainDMList;

    ExecutorService executor = Executors.newSingleThreadExecutor();

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cocktail);

        searchView = findViewById(R.id.searchView);
        trainRV = findViewById(R.id.trainRV);

        layoutManager = new LinearLayoutManager(this);

        trainRV.setLayoutManager(layoutManager);

        adapter = new CocktailAdapter(new ArrayList<CocktailDM>(), recyclerViewInterface);



        trainRV.setAdapter(adapter);











        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String s) {

                if(s == null || s.isEmpty()) {

                    Toast.makeText(CocktailActivity.this, "Please write something into the search bar!", Toast.LENGTH_LONG).show();

                }
                executor.execute(new Runnable() {
                    @Override
                    public void run() {

                        try{

                            URL url = new URL("https://api.api-ninjas.com/v1/cocktail?name=" + s);
                            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                            //if you copy my key I will know! - this key must be generated by your own team
                            connection.setRequestProperty("X-Api-Key","WYZuBSx6azHp/9bL9Rpm0A==Ssu829f4EhIaP911");
                            connection.setRequestProperty("accept", "application/json");
                            InputStream responseStream = connection.getInputStream();
                            ObjectMapper mapper = new ObjectMapper();
                            JsonNode root = mapper.readTree(responseStream);
                            System.out.println(root);
                            String searchChecker = String.valueOf(root);

                            runOnUiThread(new Runnable() {
                                @Override
                                public void run() {
                                    if(searchChecker.equals("[]") || searchChecker.isEmpty() || searchChecker == null ) {
                                        Toast.makeText(CocktailActivity.this, "No Search Results Returned!", Toast.LENGTH_LONG).show();



                                    } else {

                                        adapter.notifyDataSetChanged();


                                        Toast.makeText(CocktailActivity.this, "Returning Top 10 Results!", Toast.LENGTH_LONG).show();

                                    }
                                }
                            });

                            trainDMList = mapper.readValue(String.valueOf(root),new TypeReference<List<CocktailDM>>() {});
                            adapter.setData((ArrayList<CocktailDM>) trainDMList);

                        } catch(Exception e) {
                            Log.d("TAG", String.valueOf(e));
                        }

                    }
                });

                return false;
            }

            @Override
            public boolean onQueryTextChange(String s) {
                return false;
            }
        });
    }
}